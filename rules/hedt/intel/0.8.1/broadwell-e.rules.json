{
	"ACPI": {
		"Add": {
			"minCount: 1": {
				"type": "error",
				"message": "You may be missing SSDTs. **[Click here for more information](https://dortania.github.io/OpenCore-Install-Guide/config-HEDT/broadwell-e.html#acpi)**"
			},
			"Path: ^(?!((SSDT-OLA(.*)|MALD(.*)).aml))": {
				"type": "error",
				"message": "Sanity Checker detected that your config most likely comes from OLARILA. Instead we recommend following **[Dortania's OC Install Guide](https://dortania.github.io/OpenCore-Install-Guide/)** to install VANILLA macOS on your machine, however that doesn't mean you can't use our service :)"
			},
			"Path: ^(?!(DSDT.aml))": {
				"type": "error",
				"message": "This DSDT dump of your firmware shouldn't be included, instead you should make separate patches for things you need. Please remove it from `EFI/OC/ACPI` and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"Enabled: true": {
				"type": "warning",
				"message": "**{0}** ACPI is disabled. Please check if you need this ACPI and enable it if it's necessary"
			}
		}
	},
	"Booter": {
		"Quirks": {
			"AvoidRuntimeDefrag: true": {
				"type": "error",
				"message": "This quirk protects from boot.efi runtime memory defragmentation. It fixes UEFI runtime services support on firmware that uses SMM backing for certain services such as variable storage. It's recommended to be **enabled**"
			},
			"DevirtualiseMmio: false": {
				"type": "error",
				"message": "This quirk removes runtime attribute from certain MMIO regions. This quirk typically frees between 64 and 256 megabytes of memory, present in the debug log, and on some platforms, is the only way to boot macOS, which otherwise fails with allocation errors at the bootloader stage. Since it's dependent on your *Motherboard*, you should experiment with it **enabled** and **disabled**"
			},
			"EnableSafeModeSlide: true": {
				"type": "warning",
				"requires": "Booter/Quirks/ProvideCustomSlide: true",
				"message": "This quirk patches bootloader to have KASLR enabled in safe mode. If you are failing to boot into macOS safe mode, there is possibility that **enabling** it will resolve booting issues"
			},
			"EnableWriteUnprotector: true": {
				"type": "error",
				"message": "This quirk permits write access to UEFI runtime services code. It's required to be **enabled** for `OpenRuntime.efi`"
			},
			"ProtectUefiServices: false": {
				"type": "error",
				"message": "This quirk protects UEFI services from being overridden by the firmware. Modern firmware may update pointers to UEFI services during driver loading and may affect other quirks, however it's recommended to have this quirk **disabled**"
			},
			"ProvideCustomSlide: true": {
				"type": "warning",
				"message": "The need for this quirk is determined by the `OCABC: Only N/256 slide values are usable!` message in the debug log, however it's recommended to be **enabled**"
			},
			"RebuildAppleMemoryMap: false": {
				"type": "error",
				"message": "This quirk generates macOS compatible memory map. It's recommended to be **disabled**"
			},
			"ResizeAppleGpuBars: -1": {
				"type": "info",
				"message": "This quirk reduces GPU PCI BAR sizes for compatibility with macOS. If your GPU supports *Resizable Bar* and you have this option enabled in UEFI, it's recommended to be `0` to avoid any boot issues"
			},
			"SetupVirtualMap: true": {
				"type": "error",
				"message": "This quirk setups virtual memory at `SetVirtualAddresses`. Some types of firmware access memory by virtual addresses after a `SetVirtualAddresses` call, resulting in early boot crashes. The need for this quirk is determined by early boot failures, however it's recommended to be **enabled**"
			},
			"SyncRuntimePermissions: false": {
				"type": "error",
				"message": "This quirk updates memory permissions for the runtime environment. The need for this quirk is indicated by early boot failures, however it's recommended to be **disabled**"
			}
		}
	},
	"Kernel": {
		"Add": {
			"BundlePath: Lilu.kext": {
				"type": "error",
				"message": "**{0}** isn't included. \n**Purpose**: Kext and process patching \n**Instructions how to include**: Download **{0}** from **[Lilu repo](https://github.com/acidanthera/Lilu/releases)**, place it in `OC/Kexts` folder and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"BundlePath: VirtualSMC.kext": {
				"order": "<Lilu.kext",
				"type": "error",
				"message": "**{0}** isn't included. \n**Purpose**: Apple SMC emulation \n**Instructions how to include**: Find **{0}** inside **[VirtualSMC package](https://github.com/acidanthera/virtualsmc/releases)**, place it in `OC/Kexts` folder and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"BundlePath: SMCProcessor.kext": {
				"order": "<VirtualSMC.kext",
				"type": "warning",
				"message": "**{0}** isn't included. \n**Purpose**: **VirtualSMC** plugin for monitoring Intel CPU temperatures \n**Instructions how to include**: Find **{0}** inside **[VirtualSMC package](https://github.com/acidanthera/virtualsmc/releases)**, place it in `OC/Kexts` folder and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"BundlePath: SMCSuperIO.kext": {
				"order": "<VirtualSMC.kext",
				"type": "warning",
				"message": "**{0}** isn't included. \n**Purpose**: **VirtualSMC** plugin for monitoring fan speeds \n**Instructions how to include**: Find **{0}** inside **[VirtualSMC package](https://github.com/acidanthera/virtualsmc/releases)**, place it in `OC/Kexts` folder and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"BundlePath: WhateverGreen.kext": {
				"order": "<Lilu.kext",
				"type": "error",
				"message": "**{0}** isn't included. Please download it, place it in `OC/Kexts` and run `OC Snapshot` with **[ProperTree](https://github.com/corpnewt/ProperTree)** to add it properly into to your config"
			},
			"Enabled: true": {
				"type": "warning",
				"message": "Kext **{0}** is disabled. Please refer to **[Gathering Files: Kexts](https://dortania.github.io/OpenCore-Install-Guide/ktext.html#kexts)** to see if it needs to be enabled and is needed for your hardware"
			}
		},
		"Quirks": {
			"AppleCpuPmCfgLock: false": {
				"type": "warning",
				"message": "This quirk disables `PKG_CST_CONFIG_CONTROL` MSR modification in `AppleIntelCPUPowerManagement.kext`, commonly causing early kernel panic, when it's locked from writing. It's recommended to be **enabled** if you cannot disable CFG-Lock. Applies to Ivy Bridge and older - or Broadwell and older if running macOS 10.10 or older"
			},
			"AppleXcpmCfgLock: false": {
				"type": "warning",
				"message": "This quirk disables `PKG_CST_CONFIG_CONTROL` MSR modification in XNU, commonly causing early kernel panic, when it's locked from writing. It's recommended to be **enabled** if you cannot disable CFG-Lock. Applies to Haswell and newer"
			},
			"AppleXcpmExtraMsrs: true": {
				"type": "error",
				"message": "**{0}** must be enabled"
			},
			"CustomSMBIOSGuid: false": {
				"type": "info",
				"message": "This quirk performs GUID patching for `UpdateSMBIOSMode`: `Custom` mode. It's recommended to be **disabled** if you don't own *DELL* or *VIAO* device"
			},
			"DisableIoMapper: false": {
				"type": "error",
				"message": "This quirk disables `IOMapper` support in XNU, which may conflict with the firmware implementation. It's recommended to be **disabled** if you don't have enabled `VT-D` in BIOS/UEFI"
			},
			"LapicKernelPanic: false": {
				"type": "info",
				"message": "This quirk disables kernel panic on LAPIC interrupts. It's recommended to be **disabled** if you don't own *HP* device"
			},
			"PanicNoKextDump: true": {
				"type": "error",
				"message": "This quirk prevents kernel from printing kext dump in the panic log preventing from observing panic details. It's recommended to be **enabled**. Affects macOS 10.13 and higher"
			},
			"PowerTimeoutKernelPanic: true": {
				"type": "error",
				"message": "This quirk disables kernel panic on *setPowerState* timeout. It's recommended to be **enabled**"
			},
			"XhciPortLimit: false": {
				"type": "info",
				"message": "This quirk patches various kexts to remove USB port count limit of 15 ports. It's recommended to be **disabled** for macOS 11.3 and higher. \nNote: To map USB ports on `Windows` you can use **[USBToolBox](https://github.com/USBToolBox/tool)**. This tool can't map EHCI controllers. On `macOS` you can use **[USBMap](https://github.com/corpnewt/USBMap)**. Unfortunately, there is no `Linux` tool that allows to do it"
			}
		}
	},
	"Misc": {
		"Debug": {
			"AppleDebug: true": {
				"type": "warning",
				"message": "**{0}** should be enabled if you want to have more debugging information"
			},
			"ApplePanic: true": {
				"type": "warning",
				"message": "**{0}** should be enabled if you want to log kernel panics to disk"
			},
			"DisableWatchDog: true": {
				"type": "warning",
				"message": "**{0}** should be enabled if you want to debug early boot issues"
			},
			"Target: 67": {
				"type": "warning",
				"message": "This quirk is a bitmask of enabled logging targets. Common value is **{1}**, however if you want more or less logging, visit **[OpenCore Debugging: Config Changes](https://dortania.github.io/OpenCore-Install-Guide/troubleshooting/debug.html#config-changes)**"
			}
		},
		"Security": {
			"AllowSetDefault: true": {
				"type": "warning",
				"message": "This quirk allows `CTRL+Enter` and `Ctrl+<Index>` handling to set the default boot option in the picker. It's recommended to be **enabled**"
			},
			"ScanPolicy: 0": {
				"type": "warning",
				"message": "This quirk defines operating system detection policy. For installation process, you can use value **{1}**, however it enables detection of everything. You should visit **[Security and FileVault: ScanPolicy](https://dortania.github.io/OpenCore-Post-Install/universal/security/scanpolicy.html)** to calculate more secure value and see what specific bits allow"
			},
			"SecureBootModel: Default": {
				"type": "warning",
				"message": "**{0}** should be **Disabled** if you want to use Nvidia Web Drivers or selected SMBIOS doesn't support Apple Secure Boot (not to be confused with Secure Boot in your BIOS/UEFI)"
			},
			"Vault: Optional": {
				"type": "info",
				"message": "This quirk enables the OpenCore vaulting mechanism. It's recommended to be **Optional** if you don't have `vault.plist` file with SHA-256 hashes of all files used by OpenCore"
			}
		}
	},
	"NVRAM": {
		"LegacyEnable: true": {
			"type": "error",
			"message": "**{0}** must be enabled"
		},
		"LegacyOverwrite: true": {
			"type": "error",
			"message": "**{0}** must be enabled"
		},
		"WriteFlash: true": {
			"type": "error",
			"message": "This quirk enables writing to flash memory (Nvram) for all added variables. It's recommended to be **enabled**"
		}
	},
	"PlatformInfo": {
		"Generic": {
			"MLB: ^(?!(M0000000000000001))": {
				"type": "error",
				"message": "Board serial is missing. Please generate it corresponding to model specified in config by using **[GenSMBIOS](https://github.com/corpnewt/GenSMBIOS)**"
			},
			"ROM: ^(?!(ESIzRFVm))": {
				"type": "error",
				"message": "MAC address is missing. It's recommended to be made up with OUI (Organizationally Unique Identifier) that corresponds to real Apple interface. It's supposed to be in lowercase and without colons. Please visit **[Fixing iServices: Choose a MAC Address](https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html#choose-a-mac-address)** and **[Fixing iServices: Derive the corresponding ROM Value](https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html#derive-the-corresponding-rom-value)** for more information"
			},
			"SystemSerialNumber: ^(?!(W00000000001))": {
				"type": "error",
				"message": "Serial number is missing. Please generate it corresponding to model specified in config by using **[GenSMBIOS](https://github.com/corpnewt/GenSMBIOS)**"
			},
			"SystemUUID: ^(?!(00000000-0000-0000-0000-000000000000))": {
				"type": "error",
				"message": "UUID is missing. Please generate it corresponding to model specified in config by using **[GenSMBIOS](https://github.com/corpnewt/GenSMBIOS)**"
			}
		}
	},
	"UEFI": {
		"ConnectDrivers: true": {
			"type": "error",
			"message": "This quirk performs UEFI controller connection after driver loading. It's useful for e.g. filesystem (HfsPlus) or audio drivers. It's recommended to be **enabled**"
		},
		"Drivers": {
			"Path: (.*)HfsPlus.efi": {
				"type": "error",
				"message": "This driver wasn't found inside your config \n**Common names**: `HfsPlus.efi`, `OpenHfsPlus.efi` \n**Purpose**: Mounts HFS volumes (e.g. macOS Installers/Recovery) \n**Instructions how to include**: Find this driver inside **[OpenCorePkg package](https://github.com/acidanthera/OpenCorePkg/releases)**, place it in `OC/Drivers` folder and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"Path: OpenRuntime.efi": {
				"type": "error",
				"message": "**OpenRuntime.efi** isn't included. Please download it, place it in `OC/Drivers` and run `OC Snapshot` with **[ProperTree](https://github.com/corpnewt/ProperTree)** to add it properly into to your config"
			},
			"Path: ^(?!(OpenCore.efi))": {
				"type": "error",
				"message": "This shouldn't be in that section! \n**Purpose**: Main binary responsible for booting \n**Instructions how to remove it**: Move this binary to root directory (`EFI/OC`) and run `OC Snapshot` in **[ProperTree](https://github.com/corpnewt/ProperTree)**"
			},
			"Enabled: true": {
				"type": "warning",
				"message": "Driver **{0}** is disabled. Please visit **[Gathering files: Firmware Drivers](https://dortania.github.io/OpenCore-Install-Guide/ktext.html)** to see if it needs to be enabled and is needed for your hardware"
			}
		},
		"Quirks": {
			"IgnoreInvalidFlexRatio: true": {
				"type": "error",
				"message": "This quirk allows to ignore invalid values in the `MSR_FLEX_RATIO` MSR register. It's recommended to be **enabled**"
			},
			"UnblockFsConnect: false": {
				"type": "info",
				"message": "This quirk unblocks ability to install File System protocols sometimes blocked by some types of firmwares. It's recommended to be **disabled** if you don't own *HP* device"
			}
		}
	}
}
